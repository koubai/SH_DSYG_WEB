<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap
        PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
        "http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="com.cn.tbps">

	<resultMap id="WarehouseDto" class="com.cn.dsyg.dto.WarehouseDto">
		<result property="id" column="id" />
		<result property="productid" column="productid" />
		<result property="productname" column="productname" />
		<result property="producttype" column="producttype" />
		<result property="ulcode" column="ulcode" />
		<result property="typeno" column="typeno" />
		<result property="productrank" column="productrank" />
		<result property="brand" column="brand" />
		<result property="color" column="color" />
		<result property="item01" column="item01" />
		<result property="item02" column="item02" />
		<result property="item03" column="item03" />
		<result property="item04" column="item04" />
		<result property="item05" column="item05" />
		<result property="item06" column="item06" />
		<result property="item07" column="item07" />
		<result property="item08" column="item08" />
		<result property="item09" column="item09" />
		<result property="item10" column="item10" />
		<result property="rank" column="rank" />
		<result property="res01" column="res01" />
		<result property="res02" column="res02" />
		<result property="res03" column="res03" />
		<result property="res04" column="res04" />
		<result property="res05" column="res05" />
		<result property="res06" column="res06" />
		<result property="res07" column="res07" />
		<result property="res08" column="res08" />
		<result property="res09" column="res09" />
		<result property="res10" column="res10" />
		<result property="status" column="status" />
		<result property="createuid" column="createuid" />
		<result property="createdate" column="createdate" />
		<result property="updateuid" column="updateuid" />
		<result property="updatedate" column="updatedate" />
	</resultMap>
	
	<select id="queryWarehouseByPage" parameterClass="java.util.Map" resultMap="WarehouseDto">
		select T.* from (
			select id,productid,item01,item02,item03,item04,item05,item06,item07,item08,
				item09,item10,rank,res01,res02,res03,res04,res05,res06,res07,res08,res09,
				res10,status,createuid,createdate,updateuid,updatedate,
				(select P.nameno from tbproduct01 P where P.id = W.productid) as productname,
				(select P.item09 from tbproduct01 P where P.id = W.productid) as ulcode,
				(select P.color1 from tbproduct01 P where P.id = W.productid) as color,
				(select P.item08 from tbproduct01 P where P.id = W.productid) as brand,
				(select P.typeno from tbproduct01 P where P.id = W.productid) as typeno,
				(select P.rank from tbproduct01 P where P.id = W.productid) as productrank,
				(select P.fieldcode from tbproduct01 P where P.id = W.productid) as producttype
				from (
				select Q.id, Q.id as productid,Q.item01,'' as item02,Q.item03,'' as item04,'' as item05,'' as item06,'' as item07,'' as item08,'' as item09,'' as item10,Q.rank,Q.res01,Q.res02,Q.res03,Q.res04,'' as res05,'' as res06,'' as res07,'' as res08, '' as res09, '' as res10,Q.status,Q.createuid,Q.createdate,Q.updateuid,Q.updatedate
 from (
select A.id, A.belongto,(A.inquantity-A.outquantity-A.quantityw) as item01, A.plandate as item03, B.unit as res01, B.makearea as res02, B.packaging as res03, if((A.inquantity-A.outquantity-A.quantityw) >= 0, 0, 1) as res04, B.rank, B.status,B.createuid,B.createdate,B.updateuid,B.updatedate
from(
			SELECT ifnull(S.beforequantityp+S.remainquantityp,0) AS quantityp,ifnull(S.inquantityp,0) AS inquantity,ifnull(S.outquantitys,0) AS outquantity,ifnull(S.beforequantitys+S.remainquantitys,0) AS quantitys,ifnull(S.quantityw,0) AS quantityw,S.plandate,T.id,T.belongto,T.fieldno,T.brand,T.item1,T.item2,T.item3,T.tradename,T.typeno,T.color,T.packaging,T.unit,T.sampleflag,T.productname,T.makearea,T.supplierid,T.salesprice,T.purchaseprice,T.note,T.item01,T.item02,T.item03,T.item04,T.item05,T.item06,T.item07,T.item08,T.item09,T.item10,T.item11,T.item12,T.item13,T.item14,T.item15,T.item16,T.item17,T.item18,T.item19,T.item20,T.item21,T.item22,T.item23,T.item24,T.item25,T.item26,T.item27,T.item28,T.item29,T.item30,T.pic01,T.pic02,T.pic03,T.pic04,T.pic05,T.pdfpath,T.rank,T.status,T.res01,T.res02,T.res03,T.res04,T.res05,T.res06,T.res07,T.res08,T.res09,T.res10,T.keyword,T.createuid,T.createdate,T.updateuid,T.updatedate
				from (
					SELECT * FROM (SELECT P.productid,SUM(P.inquantity) AS inquantityp,SUM(P.beforequantity) AS beforequantityp,SUM(P.remainquantity) AS remainquantityp,max(plandate) AS plandate
					FROM etb_purchaseitem P
					GROUP BY P.productid) S1
					LEFT JOIN
					
					(SELECT * FROM 
					(SELECT S.productid as productids,SUM(S.outquantity) AS outquantitys,SUM(S.beforequantity) AS beforequantitys,SUM(S.remainquantity) AS remainquantitys 
					FROM etb_salesitem S WHERE 1 = 1
					group by S.productid) S2) S3
					ON S1.productid = S3.productids

					LEFT JOIN
					(SELECT * FROM 
					(SELECT W.productid as productidw,SUM(W.quantity) AS quantityw
					FROM etb_warehouse W WHERE 1 = 1
					and warehousetype = '3'
					group by W.productid) S2) S4
					ON S1.productid = S4.productidw
					
					UNION
					SELECT * FROM (SELECT P.productid,SUM(P.inquantity) AS inquantityp,SUM(P.beforequantity) AS beforequantityp,SUM(P.remainquantity) AS remainquantityp,max(plandate) AS plandate
					FROM etb_purchaseitem P
					GROUP BY P.productid) S1
					
					RIGHT JOIN
					(SELECT * FROM 
					(SELECT S.productid as productids,SUM(S.outquantity) AS outquantitys,SUM(S.beforequantity) AS beforequantitys,SUM(S.remainquantity) AS remainquantitys 
					FROM etb_salesitem S WHERE 1 = 1
					group by S.productid) S2) S3
					ON S1.productid = S3.productids
					
					LEFT JOIN
					(SELECT * FROM 
					(SELECT W.productid as productidw,SUM(W.quantity) AS quantityw
					FROM etb_warehouse W WHERE 1 = 1
					and warehousetype = '3'
					group by W.productid) S2) S4
					ON S1.productid = S4.productidw
				) S, etb_product T WHERE T.id = S.productid or T.id = S.productids
			) A, etb_product B
			where A.id = B.id
			) Q
				) W) T where 1 = 1
		<isNotEmpty prepend="and" property="productname">
			T.productname like '%$productname$%' ESCAPE '/'
		</isNotEmpty>
		<isNotEmpty prepend="and" property="productid">
			T.productid = #productid#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="producttype">
			T.producttype = #producttype#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="status">
			T.status = #status#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="rank">
			T.rank <![CDATA[<=]]> #rank#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="rank">
			T.productrank <![CDATA[<=]]> #rank#
		</isNotEmpty>
		order by T.updatedate desc, productname desc
		LIMIT #start#, #end#
	</select>
	
	<select id="queryWarehouseCountByPage" resultClass="int" parameterClass="java.util.Map">
		select count(*) from (
			select id,productid,item01,item02,item03,item04,item05,item06,item07,item08,
				item09,item10,rank,res01,res02,res03,res04,res05,res06,res07,res08,res09,
				res10,status,createuid,createdate,updateuid,updatedate,
				(select P.nameno from tbproduct01 P where P.id = W.productid) as productname,
				(select P.item09 from tbproduct01 P where P.id = W.productid) as ulcode,
				(select P.color1 from tbproduct01 P where P.id = W.productid) as color,
				(select P.item08 from tbproduct01 P where P.id = W.productid) as brand,
				(select P.typeno from tbproduct01 P where P.id = W.productid) as typeno,
				(select P.rank from tbproduct01 P where P.id = W.productid) as productrank,
				(select P.fieldcode from tbproduct01 P where P.id = W.productid) as producttype
				from (
								select Q.id, Q.id as productid,Q.item01,'' as item02,Q.item03,'' as item04,'' as item05,'' as item06,'' as item07,'' as item08,'' as item09,'' as item10,Q.rank,Q.res01,Q.res02,Q.res03,Q.res04,'' as res05,'' as res06,'' as res07,'' as res08, '' as res09, '' as res10,Q.status,Q.createuid,Q.createdate,Q.updateuid,Q.updatedate
 from (
select A.id, A.belongto,(A.inquantity-A.outquantity-A.quantityw) as item01, A.plandate as item03, B.unit as res01, B.makearea as res02, B.packaging as res03, if((A.inquantity-A.outquantity-A.quantityw) >= 0, 0, 1) as res04, B.rank, B.status,B.createuid,B.createdate,B.updateuid,B.updatedate
from(
			SELECT ifnull(S.beforequantityp+S.remainquantityp,0) AS quantityp,ifnull(S.inquantityp,0) AS inquantity,ifnull(S.outquantitys,0) AS outquantity,ifnull(S.beforequantitys+S.remainquantitys,0) AS quantitys,ifnull(S.quantityw,0) AS quantityw,S.plandate,T.id,T.belongto,T.fieldno,T.brand,T.item1,T.item2,T.item3,T.tradename,T.typeno,T.color,T.packaging,T.unit,T.sampleflag,T.productname,T.makearea,T.supplierid,T.salesprice,T.purchaseprice,T.note,T.item01,T.item02,T.item03,T.item04,T.item05,T.item06,T.item07,T.item08,T.item09,T.item10,T.item11,T.item12,T.item13,T.item14,T.item15,T.item16,T.item17,T.item18,T.item19,T.item20,T.item21,T.item22,T.item23,T.item24,T.item25,T.item26,T.item27,T.item28,T.item29,T.item30,T.pic01,T.pic02,T.pic03,T.pic04,T.pic05,T.pdfpath,T.rank,T.status,T.res01,T.res02,T.res03,T.res04,T.res05,T.res06,T.res07,T.res08,T.res09,T.res10,T.keyword,T.createuid,T.createdate,T.updateuid,T.updatedate
				from (
					SELECT * FROM (SELECT P.productid,SUM(P.inquantity) AS inquantityp,SUM(P.beforequantity) AS beforequantityp,SUM(P.remainquantity) AS remainquantityp,max(plandate) AS plandate
					FROM etb_purchaseitem P
					GROUP BY P.productid) S1
					LEFT JOIN
					
					(SELECT * FROM 
					(SELECT S.productid as productids,SUM(S.outquantity) AS outquantitys,SUM(S.beforequantity) AS beforequantitys,SUM(S.remainquantity) AS remainquantitys 
					FROM etb_salesitem S WHERE 1 = 1
					group by S.productid) S2) S3
					ON S1.productid = S3.productids

					LEFT JOIN
					(SELECT * FROM 
					(SELECT W.productid as productidw,SUM(W.quantity) AS quantityw
					FROM etb_warehouse W WHERE 1 = 1
					and warehousetype = '3'
					group by W.productid) S2) S4
					ON S1.productid = S4.productidw
					
					UNION
					SELECT * FROM (SELECT P.productid,SUM(P.inquantity) AS inquantityp,SUM(P.beforequantity) AS beforequantityp,SUM(P.remainquantity) AS remainquantityp,max(plandate) AS plandate
					FROM etb_purchaseitem P
					GROUP BY P.productid) S1
					
					RIGHT JOIN
					(SELECT * FROM 
					(SELECT S.productid as productids,SUM(S.outquantity) AS outquantitys,SUM(S.beforequantity) AS beforequantitys,SUM(S.remainquantity) AS remainquantitys 
					FROM etb_salesitem S WHERE 1 = 1
					group by S.productid) S2) S3
					ON S1.productid = S3.productids
					
					LEFT JOIN
					(SELECT * FROM 
					(SELECT W.productid as productidw,SUM(W.quantity) AS quantityw
					FROM etb_warehouse W WHERE 1 = 1
					and warehousetype = '3'
					group by W.productid) S2) S4
					ON S1.productid = S4.productidw
				) S, etb_product T WHERE T.id = S.productid or T.id = S.productids
			) A, etb_product B
			where A.id = B.id
			) Q
				) W) T where 1 = 1
		<isNotEmpty prepend="and" property="productname">
			T.productname like '%$productname$%' ESCAPE '/'
		</isNotEmpty>
		<isNotEmpty prepend="and" property="productid">
			T.productid = #productid#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="producttype">
			T.producttype = #producttype#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="status">
			T.status = #status#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="rank">
			T.rank <![CDATA[<=]]> #rank#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="rank">
			T.productrank <![CDATA[<=]]> #rank#
		</isNotEmpty>
	</select>
	
	<select id="queryWarehouseByID" parameterClass="java.util.Map" resultMap="WarehouseDto">
		select * from (
		select id,productid,item01,item02,item03,item04,item05,item06,item07,item08,
			item09,item10,rank,res01,res02,res03,res04,res05,res06,res07,res08,res09,
			res10,status,createuid,createdate,updateuid,updatedate,
			(select P.nameno from tbproduct01 P where P.id = W.productid) as productname,
			(select P.item09 from tbproduct01 P where P.id = W.productid) as ulcode,
			(select P.color1 from tbproduct01 P where P.id = W.productid) as color,
			(select P.item08 from tbproduct01 P where P.id = W.productid) as brand,
			(select P.typeno from tbproduct01 P where P.id = W.productid) as typeno,
			(select P.rank from tbproduct01 P where P.id = W.productid) as productrank,
			(select P.fieldcode from tbproduct01 P where P.id = W.productid) as producttype
			from (
				select Q.id, Q.id as productid,Q.item01,'' as item02,Q.item03,'' as item04,'' as item05,'' as item06,'' as item07,'' as item08,'' as item09,'' as item10,Q.rank,Q.res01,Q.res02,Q.res03,Q.res04,'' as res05,'' as res06,'' as res07,'' as res08, '' as res09, '' as res10,Q.status,Q.createuid,Q.createdate,Q.updateuid,Q.updatedate
 from (
select A.id, A.belongto,(A.inquantity-A.outquantity-A.quantityw) as item01, A.plandate as item03, B.unit as res01, B.makearea as res02, B.packaging as res03, if((A.inquantity-A.outquantity-A.quantityw) >= 0, 0, 1) as res04, B.rank, B.status,B.createuid,B.createdate,B.updateuid,B.updatedate
from(
			SELECT ifnull(S.beforequantityp+S.remainquantityp,0) AS quantityp,ifnull(S.inquantityp,0) AS inquantity,ifnull(S.outquantitys,0) AS outquantity,ifnull(S.beforequantitys+S.remainquantitys,0) AS quantitys,ifnull(S.quantityw,0) AS quantityw,S.plandate,T.id,T.belongto,T.fieldno,T.brand,T.item1,T.item2,T.item3,T.tradename,T.typeno,T.color,T.packaging,T.unit,T.sampleflag,T.productname,T.makearea,T.supplierid,T.salesprice,T.purchaseprice,T.note,T.item01,T.item02,T.item03,T.item04,T.item05,T.item06,T.item07,T.item08,T.item09,T.item10,T.item11,T.item12,T.item13,T.item14,T.item15,T.item16,T.item17,T.item18,T.item19,T.item20,T.item21,T.item22,T.item23,T.item24,T.item25,T.item26,T.item27,T.item28,T.item29,T.item30,T.pic01,T.pic02,T.pic03,T.pic04,T.pic05,T.pdfpath,T.rank,T.status,T.res01,T.res02,T.res03,T.res04,T.res05,T.res06,T.res07,T.res08,T.res09,T.res10,T.keyword,T.createuid,T.createdate,T.updateuid,T.updatedate
				from (
					SELECT * FROM (SELECT P.productid,SUM(P.inquantity) AS inquantityp,SUM(P.beforequantity) AS beforequantityp,SUM(P.remainquantity) AS remainquantityp,max(plandate) AS plandate
					FROM etb_purchaseitem P
					GROUP BY P.productid) S1
					LEFT JOIN
					
					(SELECT * FROM 
					(SELECT S.productid as productids,SUM(S.outquantity) AS outquantitys,SUM(S.beforequantity) AS beforequantitys,SUM(S.remainquantity) AS remainquantitys 
					FROM etb_salesitem S WHERE 1 = 1
					group by S.productid) S2) S3
					ON S1.productid = S3.productids

					LEFT JOIN
					(SELECT * FROM 
					(SELECT W.productid as productidw,SUM(W.quantity) AS quantityw
					FROM etb_warehouse W WHERE 1 = 1
					and warehousetype = '3'
					group by W.productid) S2) S4
					ON S1.productid = S4.productidw
					
					UNION
					SELECT * FROM (SELECT P.productid,SUM(P.inquantity) AS inquantityp,SUM(P.beforequantity) AS beforequantityp,SUM(P.remainquantity) AS remainquantityp,max(plandate) AS plandate
					FROM etb_purchaseitem P
					GROUP BY P.productid) S1
					
					RIGHT JOIN
					(SELECT * FROM 
					(SELECT S.productid as productids,SUM(S.outquantity) AS outquantitys,SUM(S.beforequantity) AS beforequantitys,SUM(S.remainquantity) AS remainquantitys 
					FROM etb_salesitem S WHERE 1 = 1
					group by S.productid) S2) S3
					ON S1.productid = S3.productids
					
					LEFT JOIN
					(SELECT * FROM 
					(SELECT W.productid as productidw,SUM(W.quantity) AS quantityw
					FROM etb_warehouse W WHERE 1 = 1
					and warehousetype = '3'
					group by W.productid) S2) S4
					ON S1.productid = S4.productidw
				) S, etb_product T WHERE T.id = S.productid or T.id = S.productids
			) A, etb_product B
			where A.id = B.id
			) Q
			) W where W.id = #id#) T where 1 = 1
		<isNotEmpty prepend="and" property="rank">
			T.rank <![CDATA[<=]]> #rank#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="rank">
			T.productrank <![CDATA[<=]]> #rank#
		</isNotEmpty>
	</select>
	
	<update id="deleteWarehouseByProductid" parameterClass="java.util.Map">
		update tbwarehouse
		set status = #status#,
			updateuid = #updateuid#,
			updatedate = NOW()
		where productid = #productid#
	</update>
	
	<delete id="deleteWarehouse" parameterClass="java.util.Map">
		delete from tbwarehouse where id = #id#
	</delete>
	
	<insert id="insertWarehouse" parameterClass="com.cn.dsyg.dto.WarehouseDto">
		insert into tbwarehouse(
			productid,item01,item02,item03,item04,item05,item06,item07,item08,item09,item10,
			rank,res01,res02,res03,res04,res05,res06,res07,res08,res09,res10,
			status,createuid,createdate,updateuid,updatedate
		)
		values(
			#productid#,#item01#,#item02#,#item03#,#item04#,#item05#,#item06#,#item07#,#item08#,#item09#,#item10#,
			#rank#,#res01#,#res02#,#res03#,#res04#,#res05#,#res06#,#res07#,#res08#,#res09#,#res10#,
			#status#,#createuid#,NOW(),#updateuid#,NOW()
		)
	</insert>
	
	<update id="updateWarehouse" parameterClass="com.cn.dsyg.dto.WarehouseDto">
		update tbwarehouse
		set item01 = #item01#,
			item02 = #item02#,
			item03 = #item03#,
			item04 = #item04#,
			item05 = #item05#,
			item06 = #item06#,
			item07 = #item07#,
			item08 = #item08#,
			item09 = #item09#,
			item10 = #item10#,
			rank = #rank#,
			res01 = #res01#,
			res02 = #res02#,
			res03 = #res03#,
			res04 = #res04#,
			res05 = #res05#,
			res06 = #res06#,
			res07 = #res07#,
			res08 = #res08#,
			res09 = #res09#,
			res10 = #res10#,
			status = #status#,
			updateuid = #updateuid#,
			updatedate = NOW()
		where id = #id#
	</update>
	
</sqlMap>